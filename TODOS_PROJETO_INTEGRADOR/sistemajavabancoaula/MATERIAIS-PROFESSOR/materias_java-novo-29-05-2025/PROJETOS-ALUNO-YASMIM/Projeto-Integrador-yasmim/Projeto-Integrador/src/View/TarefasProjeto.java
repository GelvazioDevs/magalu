/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import controller.ControllerTarefaDB;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.ModelTarefa;

/**
 *
 * @author djonata.serafim
 */
public class TarefasProjeto extends javax.swing.JFrame {

    ControllerTarefaDB tarefadb = new ControllerTarefaDB();

    
    public TarefasProjeto() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    private int codigo;
    private String tarefa;
    private int status;

    public TarefasProjeto(int codigo, String tarefa, int status, JButton btnVoltar, JButton jButton1, JButton jButton2, JComboBox<String> jComboBox1, JLabel jLabel1, JLabel jLabel2, JLabel jLabel3, JLabel jLabel4, JLabel jLabel5, JScrollPane jScrollPane2, JScrollPane jScrollPane3, JScrollPane jScrollPane4, JTextField jTextField1, JTable tabelaDadosFazer, JTable tabeladadosFazendo, JTable tabeladadosFinalizado) throws HeadlessException {
        this.codigo = codigo;
        this.tarefa = tarefa;
        this.status = status;
        this.btnVoltar = btnVoltar;
        this.btnAtualizar = jButton1;
//        this.jComboBox1 = jComboBox1;
        this.jLabel1 = jLabel1;
        this.jLabel2 = jLabel2;
        this.jLabel3 = jLabel3;
//        this.jLabel4 = jLabel4;
//        this.jLabel5 = jLabel5;
        this.jScrollPane2 = jScrollPane2;
        this.jScrollPane3 = jScrollPane3;
        this.jScrollPane4 = jScrollPane4;
        this.jTextField1 = jTextField1;
        this.tabelaDadosFazer = tabelaDadosFazer;
        this.tabeladadosFazendo = tabeladadosFazendo;
        this.tabeladadosFinalizado = tabeladadosFinalizado;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaDadosFazer = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabeladadosFinalizado = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabeladadosFazendo = new javax.swing.JTable();
        btnAtualizar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(1500, 900));

        jLabel1.setText("Finalizado");

        jLabel2.setText("Fazendo");

        jLabel3.setText("A Fazer");

        tabelaDadosFazer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Tarefa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDadosFazer.setColumnSelectionAllowed(true);
        tabelaDadosFazer.setRowHeight(25);
        tabelaDadosFazer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaDadosFazerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaDadosFazer);
        tabelaDadosFazer.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tabelaDadosFazer.getColumnModel().getColumnCount() > 0) {
            tabelaDadosFazer.getColumnModel().getColumn(0).setResizable(false);
            tabelaDadosFazer.getColumnModel().getColumn(0).setPreferredWidth(3);
        }

        tabeladadosFinalizado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tarefa", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabeladadosFinalizado.setAutoscrolls(false);
        tabeladadosFinalizado.setColumnSelectionAllowed(true);
        tabeladadosFinalizado.setRowHeight(25);
        tabeladadosFinalizado.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tabeladadosFinalizado);
        tabeladadosFinalizado.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tabeladadosFinalizado.getColumnModel().getColumnCount() > 0) {
            tabeladadosFinalizado.getColumnModel().getColumn(0).setResizable(false);
            tabeladadosFinalizado.getColumnModel().getColumn(0).setPreferredWidth(3);
        }

        tabeladadosFazendo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tarefa", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabeladadosFazendo.setRowHeight(25);
        jScrollPane4.setViewportView(tabeladadosFazendo);
        if (tabeladadosFazendo.getColumnModel().getColumnCount() > 0) {
            tabeladadosFazendo.getColumnModel().getColumn(0).setResizable(false);
            tabeladadosFazendo.getColumnModel().getColumn(0).setPreferredWidth(3);
        }

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Nova Tarefa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(216, 216, 216)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(257, 257, 257)
                                .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVoltar)
                        .addGap(120, 120, 120)
                        .addComponent(jLabel3)
                        .addGap(310, 310, 310)
                        .addComponent(jLabel2)
                        .addGap(264, 264, 264)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jLabel2))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVoltar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel6)))
                .addGap(37, 37, 37)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        atualizaTarefas();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
         dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void tabelaDadosFazerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDadosFazerMouseClicked
//        codigo = Integer.parseInt(String.valueOf(tabelaDadosFazer.getModel().getValueAt(tabelaDadosFazer.getSelectedRow(), 0)));
//        tarefa = String.valueOf(tabelaDadosFazer.getModel().getValueAt(tabelaDadosFazer.getSelectedRow(), 1));
//        status = Integer.parseInt(String.valueOf(tabelaDadosFazer.getModel().getValueAt(tabelaDadosFazer.getSelectedRow(), 4)));
//        dispose();
            // TODO add your handling code here:
    }//GEN-LAST:event_tabelaDadosFazerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TarefasProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TarefasProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TarefasProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TarefasProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TarefasProjeto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tabelaDadosFazer;
    private javax.swing.JTable tabeladadosFazendo;
    private javax.swing.JTable tabeladadosFinalizado;
    // End of variables declaration//GEN-END:variables

    public void atualizaTarefas() {                
        DefaultTableModel fazer = (DefaultTableModel) tabelaDadosFazer.getModel();
        DefaultTableModel fazendo = (DefaultTableModel) tabeladadosFazendo.getModel();
        DefaultTableModel finalizados = (DefaultTableModel) tabeladadosFinalizado.getModel();
       
        // Reseta os registros da tabela
        fazer.setRowCount(0);
        
                
        // Lista todas as tarefas da classe tarefadb
        ArrayList<ModelTarefa> tarFazer = tarefadb.getTodasTarefaPorStatus(1);
        
        // Percorre a lista de tarefas recebidas e atualiza
        //   tipo        apelido     arrayList de pessoas
        for (ModelTarefa auxTarefa : tarFazer) {
            if(auxTarefa.getStatus() == 1){
                fazer.addRow(new Object[]{
                    auxTarefa.getCodigo(),
                    auxTarefa.getDescricao(),
                });                            
            }
        }
        
        fazendo.setRowCount(0);
        
         ArrayList<ModelTarefa> tarFazendo = tarefadb.getTodasTarefaPorStatus(2);
        
        // Percorre a lista de tarefas recebidas e atualiza
        //   tipo        apelido     arrayList de pessoas
        for (ModelTarefa auxTarefa : tarFazendo) {
            if(auxTarefa.getStatus() == 2){
                fazendo.addRow(new Object[]{
                    auxTarefa.getCodigo(),
                    auxTarefa.getDescricao(),
                });                            
            }
        }
        finalizados.setRowCount(0);
        ArrayList<ModelTarefa> tarFinalizado = tarefadb.getTodasTarefaPorStatus(3);
        
        // Percorre a lista de tarefas recebidas e atualiza
        //   tipo        apelido     arrayList de pessoas
        for (ModelTarefa auxTarefa : tarFinalizado) {
            if(auxTarefa.getStatus() == 3){
                finalizados.addRow(new Object[]{
                    auxTarefa.getCodigo(),
                    auxTarefa.getDescricao(),
                });                            
            }
        }
    }
    
}
